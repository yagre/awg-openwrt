name: Create Release on Tag
# on: [workflow_dispatch]
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: "v${{ matrix.build_env.tag }} - ${{ matrix.build_env.pkgarch}} :: ${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}} build"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_env:
          - tag: "23.05.5"
            pkgarch: aarch64_cortex-a53
            target: mediatek
            subtarget: 	mt7622
            vermagic: "4df1170d203681f87395690076ea93d3"
          - tag: "22.03.4"
            pkgarch: aarch64_cortex-a53
            target: mediatek
            subtarget: 	mt7622
            vermagic: "c65e538a4b309c4bc6d8132da60431be"
          - tag: "24.10.0-rc7"
            pkgarch: aarch64_cortex-a53
            target: mediatek
            subtarget: filogic
            vermagic: "d649d775435da5a8637f7a955a80d331"

    steps:
      - uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          ref: v${{ matrix.build_env.tag }}
          fetch-depth: 0

      - name: Cache Tools and Kernel
        id: cache-tools-kernel
        uses: actions/cache@v4
        env:
          cache-name: "cache-tools-kernel-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch}}-${{ matrix.build_env.target}}-${{ matrix.build_env.subtarget}}"
        with:
          path: "**"
          key: ${{ runner.os }}-build-vm4-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-vm4-cache-tools-kernel-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch}}-

      - name: Building kernel and tools
        run: |
          echo "pkgarch: ${{ matrix.build_env.pkgarch}}, target:${{ matrix.build_env.target}}, subtarget: ${{ matrix.build_env.subtarget}}"
      
          # Setup & install feeds
          wget https://downloads.openwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/feeds.buildinfo -O feeds.conf
          echo "src-git awgopenwrt https://github.com/yury-sannikov/awg-openwrt.git" >> ./feeds.conf
          
          # Обновляем и устанавливаем feeds один раз
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          ./scripts/feeds install xtables-addons
      
          # Клонируем и настраиваем xt_wgobfs ПРАВИЛЬНО
          git clone https://github.com/infinet/xt_wgobfs.git package/xt_wgobfs
          mkdir -p package/xtables-wgobfs
          wget https://raw.githubusercontent.com/infinet/xt_wgobfs/main/openwrt/package/Makefile -O package/xtables-wgobfs/Makefile
          
          # Setup config
          wget https://downloads.openwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/config.buildinfo -O .config
          echo "CONFIG_PACKAGE_kmod-amneziawg=m" >> .config
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-amneziawg=y" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-chacha20poly1305=m" >> .config
          echo "CONFIG_PACKAGE_iptables-mod-wgobfs=m" >> .config
          echo "CONFIG_PACKAGE_iptables-nft=m" >> .config
          echo "CONFIG_PACKAGE_kmod-ipt-wgobfs=m" >> .config
          echo "CONFIG_PACKAGE_iptables-mod-wgobfs=m" >> .config
      
            
          # Пропускаем проблемные пакеты на первом этапе
          # echo "CONFIG_PACKAGE_iptables-mod-wgobfs=m" >> .config
          
          make defconfig
          
          # Теперь добавляем xtables-wgobfs через меню конфигурации
          ./scripts/feeds/update -a
          ./scripts/feeds/install -a
          ./scripts/feeds/install xtables-addons
          
          # Пробуем добавить пакет другим способом
          make menuconfig || true
      
                echo "    > make tools/install"
                make tools/install -i -j `nproc`
      
                cat ./build_dir/target-*/linux-*/linux-*/.vermagic || true
      
                # Если toolchain уже кэширован, пропускаем его сборку
                if [ "${{ steps.cache-tools-kernel.outputs.cache-hit }}" != "true" ]; then
                  echo "    > make toolchain/install"
                  make toolchain/install -i -j `nproc`
                fi
      
                cat ./build_dir/target-*/linux-*/linux-*/.vermagic || true
      
                # compile kernel module
                echo "    > make target/linux/compile"
                make target/linux/compile  -i -j `nproc` V=s
      
                VERMAGIC=`cat ./build_dir/target-*/linux-*/linux-*/.vermagic`
                VERMAGIC_EXPECTED=${{ matrix.build_env.vermagic }}
      
                if [ "$VERMAGIC" != "$VERMAGIC_EXPECTED" ]; then
                  echo Vermagic mismatch: $VERMAGIC, expected $VERMAGIC_EXPECTED
                  exit 1
                fi
      
      - name: Build AmneziaWG and xt_wgobfs
        run: |
          VERMAGIC=`cat ./build_dir/target-*/linux-*/linux-*/.vermagic`
          echo "Vermagic: $VERMAGIC"
      
          VERMAGIC_EXPECTED=${{ matrix.build_env.vermagic }}
          if [ "$VERMAGIC" != "$VERMAGIC_EXPECTED" ]; then
            echo Vermagic mismatch: $VERMAGIC, expected $VERMAGIC_EXPECTED
            exit 1
          fi
      
          # Собираем AmneziaWG компоненты
          make package/kmod-amneziawg/{clean,download,prepare} V=s || true
          make package/kmod-amneziawg/compile V=s || true
      
          make package/luci-app-amneziawg/{clean,download,prepare}
          make package/luci-app-amneziawg/compile V=s
      
          make V=s package/amneziawg-tools/{clean,download,prepare}
          make V=s package/amneziawg-tools/compile
      
          # Собираем xtables-wgobfs
          echo "Building xtables-wgobfs..."
          make V=s package/xtables-wgobfs/{clean,download,prepare}
          make V=s package/xtables-wgobfs/compile
          
          # Также попробуйте собрать через feeds если прямой способ не работает
          ./scripts/feeds install xtables-wgobfs || true
          make V=s package/feeds/packages/xtables-wgobfs/compile || true

    
      - name: Prepare artifacts
        run: |
          tag_name=${{  github.ref_name }}
          mkdir -p awgrelease
          postfix="${tag_name}_v${{ matrix.build_env.tag }}_${{ matrix.build_env.pkgarch}}_${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}"
          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/amneziawg-tools_*.ipk awgrelease/amneziawg-tools_${postfix}.ipk
          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/luci-app-amneziawg_*.ipk awgrelease/luci-app-amneziawg_${postfix}.ipk
          cp bin/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/packages/kmod-amneziawg_*.ipk awgrelease/kmod-amneziawg_${postfix}.ipk

          cp bin/packages/${{ matrix.build_env.pkgarch }}/packages/iptables-mod-wgobfs_*.ipk awgrelease/iptables-mod-wgobfs_${postfix}.ipk
          cp bin/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/packages/kmod-ipt-wgobfs_*.ipk awgrelease/kmod-ipt-wgobfs_${postfix}.ipk

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: awgrelease/*.ipk

